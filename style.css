:root {
    --phenotype: rgba(255, 255, 255, 0.05); /* Default phenotype for visibility */
    --island: url(nmt.png);
    --seed-red: url(seed-red.png);
    --seed-yellow: url(seed-yellow.png);
    --seed-white: url(seed-white.png);
    --seed-orange: url(seed-orange.png);
    --obtain: none;
    --tile-width: 84px;
    --tile-height: 48px;
    --tile-skew: skew(-26.5650512deg);
    --far-border: 1px;
    --near-border: 2px;
    --gap: 2px;
    --big-gap: 13px;
    --skew-offset: calc((var(--far-border) + var(--tile-height) + var(--near-border) + var(--gap)) / 2);
    --row-skew-offset: 0;
    --highlight-offset: 0;
    --tile-translate: translate(var(--row-skew-offset), var(--highlight-offset));
    --section-brown: 78, 68, 49;
    --game-cream: 255, 250, 228;
    --game-cyan: 12, 198, 184;
    --game-cyan-dark: 0, 180, 168;
    --game-cyan-dark2: 60, 176, 165;
    /* Default colors */
    --red: 255, 0, 0;
    --orange: 255, 128, 0;
    --yellow: 255, 255, 0;
    --green: 0, 255, 0;
    --blue: 0, 0, 255;
    --purple: 128, 0, 255;
    --pink: 255, 128, 255;
    --white: 255, 255, 255;
    --black: 0, 0, 0;
}

body {
    max-width: 1200px;
    margin: 0 auto;
    padding: 0 0 12px;
    font-family: "Roboto", sans-serif;
    line-height: 1.4;
    background-color: #e9f5ec;
    background-color: rgb(234, 246, 245);
    color: #005c56;
}

div.intro {
    margin: 0 16px
}

section {
    position: relative;
    margin: 0 16px;
    border-radius: 0 0 16px 16px;
    background-color: rgb(var(--section-brown));
    color: white;
    overflow: hidden;
    display: flex;
    justify-content: space-evenly;
    flex-wrap: wrap;
}

h1, h2, h3 {
    font-family: "Zilla Slab", serif;
}

section h3 {
    margin-top: 36px;
    margin-bottom: 48px;
    font-size: 36px;
    text-align: center;
    flex-basis: 100%;
    text-transform: capitalize;
}

section span.breed {
    border-radius: 4px;
    padding: 0 4px;
    background: rgba(0, 0, 0, 0.2);
    color: #ffff66;
    cursor: pointer;
}

section span.breed:hover {
    color: #ccffff;
}

section button {
    margin: 0;
    border: 4px solid #60bcb6;
    border-radius: 20px;
    padding: 8px 12px;
    font: 18px "Zilla Slab", serif;
    font-weight: bold;
    background: #ffffff linear-gradient(to bottom, #ddeeff, #ffffff 20%, #ffffff 80%, #ddeeff);
    color: #005c56;
}

button#boring_rose_toggle {
    position: absolute;
    opacity: 0.5;
    right: 0;
    top: 0;
}

section:not(.rose) button#boring_rose_toggle {
    display: none;
}

section.condensed button#boring_rose_toggle {
    opacity: 1.0;
}

ol, ul {
    padding-left: 1.5em;
}

div.notes {
    display: none;
    flex-basis: 100%;
    padding: 0 36px 36px;
}

.rolled_up {
    height: 0;
    margin-top: 0;
    margin-bottom: 0;
    overflow: hidden;
}

div.varieties {
    display: flex;
    flex-wrap: wrap;
    justify-content: space-between;
    align-content: flex-start;
    align-items: flex-end;
    width: calc(3 * (var(--far-border) + var(--tile-width) + var(--near-border)) + 2 * var(--gap));
    margin-bottom: 36px;
}

div.varieties > div {
    width: var(--tile-width);
    height: var(--tile-height);
    margin-bottom: var(--gap);
    border-top: var(--far-border) solid rgba(255, 255, 255, 0.1);
    border-right: var(--near-border) solid rgba(0, 0, 0, 0.2);
    border-bottom: var(--near-border) solid rgba(0, 0, 0, 0.2);
    border-left: var(--far-border) solid rgba(255, 255, 255, 0.1);
    border-radius: 2px;
    background: rgba(var(--phenotype), 1.0) var(--obtain) no-repeat center;
    background-size: auto calc(var(--tile-height) / 2);
    box-shadow: 1px 1px 0 rgba(0, 0, 0, 0.2);
    line-height: 1;
    cursor: pointer;
    position: relative;
    overflow: hidden;
    user-select: none;
    transform: translate(var(--row-skew-offset), var(--highlight-offset)) var(--tile-skew);
    transform-origin: center;
    transition: background-color 0.2s;
    -webkit-user-select: none;
    -khtml-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
}

div.varieties > div.highlighted {
    --highlight-offset: -6px;
    box-shadow: 0 0 0 2px rgba(0, 0, 0, 1), 4.5px 8px 2px rgba(0, 0, 0, 0.6);
    z-index: 2;
}

div.varieties > div.impossible {
    background-color: rgba(var(--phenotype), 0.2);
    border-top-color: rgba(255, 255, 255, 0.02);
    border-right-color: rgba(0, 0, 0, 0.02);
    border-bottom-color: rgba(0, 0, 0, 0.02);
    border-left-color: rgba(255, 255, 255, 0.02);
}

div.varieties > div.impossible.highlighted {
    box-shadow: 1px 1px 0 2px rgba(0, 0, 0, 0.2), 4px 7px 2px rgba(0, 0, 0, 0.12);
}


section.rose.condensed div.varieties.Ss {
    width: calc(var(--far-border) + var(--tile-width) + var(--near-border));
}

section.rose.condensed div.varieties.Ss .boring:nth-child(3n+1),
section.rose.condensed div.varieties.Ss .boring:nth-child(3n+2) {
    display: none;
}

section:not(.rose) div.varieties.four_d,
section.rose div.varieties.three_d {
    display: none;
}

section.rose.condensed div.varieties.SS {
    display: none;
}

section.rose div.blue_rose_notes {
    display: block;
}

section:not(.cosmos) div.instructions.cosmos { display: none; }
section:not(.hyacinth) div.instructions.hyacinth { display: none; }
section:not(.lily) div.instructions.lily { display: none; }
section:not(.mum) div.instructions.mum { display: none; }
section:not(.pansy) div.instructions.pansy { display: none; }
section:not(.rose) div.instructions.rose { display: none; }
section:not(.tulip) div.instructions.tulip { display: none; }
section:not(.windflower) div.instructions.windflower { display: none; }

section.rose.condensed div.notes .boring {
    display: none;
}

.result {
    text-shadow: 1px 0px 0 black,
                 1px 1px 0 black,
                 1px -1px 0 black,
                 -1px 0px 0 black,
                 -1px 1px 0 black,
                 -1px -1px 0 black,
                 0px -1px 0 black,
                 0px 1px 0 black;
    font-weight: bold;
    pointer-events: none;
}

.result {
    position: absolute;
    right: 2px;
    bottom: 1px;
    text-align: center;
}

.result > div:nth-child(2) {
    text-decoration: overline;
}

.parentA,
.parentB {
    margin-top: 2px;
    margin-left: 2px;
    pointer-events: none;
}

.parentA > div,
.parentB > div {
    display: inline-block;
    padding: 1px 6px;
    font-size: 19px;
    font-weight: bold;
    background-color: rgba(0, 0, 0, 0.6);
    border-radius: 200px;
    pointer-events: none;
}

div.varieties > *:nth-child(12),
div.varieties > *:nth-child(21) {
    margin-top: var(--big-gap);
}

div.varieties > *:nth-child(9n+1),
div.varieties > *:nth-child(9n+2),
div.varieties > *:nth-child(9n+3) {
    --row-skew-offset: var(--skew-offset);
}

div.varieties > *:nth-child(9n+7),
div.varieties > *:nth-child(9n+8),
div.varieties > *:nth-child(9n+9) {
    --row-skew-offset: calc(-1 * var(--skew-offset));
}

/* Instructions */
div.instructions ul {
    list-style: none;
    margin: 0;
    padding: 0;
}

div.instructions ul li {
    margin-bottom: 4px;
}

div.breed {
    display: inline-flex;
    vertical-align: middle;
    align-items: center;
    border-top: 2px solid #ffffff;
    border-bottom: 2px solid rgba(var(--section-brown), 0.25);
    border-radius: 8px;
    padding: 2px 4px;
    color: rgb(var(--section-brown));
    background-color: rgb(var(--game-cream));
    cursor: pointer;
}

div.breed .operator {
    padding: 0 4px;
    font-size: 24px;
}

div.breed .parent,
div.breed .offspring {
    position: relative;
    display: flex;
    align-items: center;
    justify-content: center;
    width: 40px;
    height: 40px;
    border: 1px solid rgba(var(--section-brown), 1);
    border-radius: 4px;
    overflow: hidden;
}

div.breed .known.parent,
div.breed .known.offspring {
    background: rgb(var(--phenotype)) var(--obtain) no-repeat center;
    background-size: 50%;
}

div.breed label {
    font-size: 24px;
    color: rgba(0, 0, 0, 0.5);
    cursor: pointer;
}

div.breed label.white {
    color: white;
}

/* Menu */
div.species_menu {
    margin: 48px 16px 0;
    border-top: 4px solid rgb(var(--game-cyan-dark2));
    border-radius: 20px 20px 0 0;
    padding: 4px;
    background: rgba(var(--game-cream));
}

div.species_menu ul {
    list-style: none;
    margin: 0;
    padding: 0;
    display: grid;
    grid-template-columns: repeat(8, 1fr);
}

div.species_menu ul button {
    display: block;
    width: 100%;
    height: 100%;
    padding: 10px 0;
    border: 0;
    border-radius: 16px;
    background: transparent;
    cursor: pointer;
    transition: background-color 0.2s;
}

button:focus {
    outline: none;
}

div.species_menu ul button.selected {
    background-color: #60bcb6;
    background-color: rgb(var(--game-cyan));
}

div.species_menu ul button img {
    height: auto;
    max-height: 72px;
    max-width: 100%;
}

/* General colors */
.red {
    background-color: rgb(var(--red));
}

.orange {
    background-color: rgb(var(--orange));
}

.yellow {
    background-color: rgb(var(--yellow));
}

.green {
    background-color: rgb(var(--green));
}

.blue {
    background-color: rgb(var(--blue));
}

.purple {
    background-color: rgb(var(--purple));
}

.pink {
    background-color: rgb(var(--pink));
}

.white {
    background-color: rgb(var(--white));
}

.black {
    background-color: rgb(var(--black));
}

/* Species colors */
.cosmos {
    --red: 238, 64, 64;
    --orange: 253, 151, 23;
    --yellow: 255, 231, 71;
    --pink: 254, 126, 199;
    --white: 245, 248, 240;
    --black: 88, 38, 38;
}

.hyacinth {
    --red: 242, 36, 53;
    --orange: 255, 133, 52;
    --yellow: 245, 220, 37;
    --blue: 77, 93, 255;
    --purple: 142, 77, 255;
    --pink: 255, 171, 185;
    --white: 224, 235, 215;
}

.lily {
    --red: 221, 53, 44;
    --orange: 255, 157, 0;
    --yellow: 255, 236, 0;
    --pink: 255, 92, 178;
    --black: 91, 57, 71;
    --white: 247, 246, 231;
}

.mum {
    --red: 230, 46, 52;
    --pink: 255, 184, 205;
    --yellow: 255, 228, 51;
    --green: 205, 230, 46;
    --purple: 166, 46, 230;
    --white: 248, 255, 230;
}

.pansy {
    --red: 209, 38, 46;
    --orange: 230, 151, 59;
    --yellow: 254, 230, 51;
    --blue: 75, 81, 250;
    --purple: 144, 46, 230;
    --white: 233, 230, 242;
}

.rose {
    --red: 255, 54, 61;
    --orange: 255, 139, 51;
    --yellow: 255, 241, 38;
    --blue: 56, 96, 255;
    --purple: 150, 47, 137;
    --pink: 255, 148, 204;
    --white: 249, 255, 230;
    --black: 87, 77, 85;
    --black: 69, 52, 67;
}

.tulip {
    --red: 242, 75, 65;
    --orange: 255, 162, 61;
    --yellow: 255, 227, 89;
    --purple: 158, 78, 255;
    --white: 247, 250, 225;
    --black: 96, 53, 67;
}

.windflower {
    --red: 241, 27, 45;
    --orange: 255, 127, 0;
    --blue: 13, 102, 255;
    --purple: 150, 41, 204;
    --pink: 251, 140, 255;
    --white: 251, 250, 255;
}

/* Species genotype info */
.cosmos .rrYYWW { --phenotype: var(--yellow); }
.cosmos .RrYYWW { --phenotype: var(--orange); }
.cosmos .RRYYWW { --phenotype: var(--red); }
.cosmos .rrYyWW { --phenotype: var(--white); }
.cosmos .RrYyWW { --phenotype: var(--pink); --obtain: var(--island); }
.cosmos .RRYyWW { --phenotype: var(--red); }
.cosmos .rryyWW { --phenotype: var(--white); }
.cosmos .RryyWW { --phenotype: var(--pink); }
.cosmos .RRyyWW { --phenotype: var(--red); }
.cosmos .rrYYWw { --phenotype: var(--yellow); --obtain: var(--seed-yellow); }
.cosmos .RrYYWw { --phenotype: var(--orange); }
.cosmos .RRYYWw { --phenotype: var(--black); }
.cosmos .rrYyWw { --phenotype: var(--yellow); }
.cosmos .RrYyWw { --phenotype: var(--orange); }
.cosmos .RRYyWw { --phenotype: var(--orange); --obtain: var(--island); }
.cosmos .rryyWw { --phenotype: var(--white); --obtain: var(--seed-white); }
.cosmos .RryyWw { --phenotype: var(--pink); }
.cosmos .RRyyWw { --phenotype: var(--red); }
.cosmos .rrYYww { --phenotype: var(--yellow); }
.cosmos .RrYYww { --phenotype: var(--orange); }
.cosmos .RRYYww { --phenotype: var(--black); }
.cosmos .rrYyww { --phenotype: var(--yellow); }
.cosmos .RrYyww { --phenotype: var(--orange); }
.cosmos .RRYyww { --phenotype: var(--orange); }
.cosmos .rryyww { --phenotype: var(--white); }
.cosmos .Rryyww { --phenotype: var(--pink); }
.cosmos .RRyyww { --phenotype: var(--red); --obtain: var(--seed-red); }

.hyacinth .rrYYWW { --phenotype: var(--yellow); }
.hyacinth .RrYYWW { --phenotype: var(--yellow); }
.hyacinth .RRYYWW { --phenotype: var(--purple); }
.hyacinth .rrYyWW { --phenotype: var(--white); }
.hyacinth .RrYyWW { --phenotype: var(--yellow); }
.hyacinth .RRYyWW { --phenotype: var(--red); }
.hyacinth .rryyWW { --phenotype: var(--blue); }
.hyacinth .RryyWW { --phenotype: var(--white); }
.hyacinth .RRyyWW { --phenotype: var(--red); }
.hyacinth .rrYYWw { --phenotype: var(--yellow); }
.hyacinth .RrYYWw { --phenotype: var(--yellow); }
.hyacinth .RRYYWw { --phenotype: var(--purple); }
.hyacinth .rrYyWw { --phenotype: var(--yellow); }
.hyacinth .RrYyWw { --phenotype: var(--yellow); }
.hyacinth .RRYyWw { --phenotype: var(--red); }
.hyacinth .rryyWw { --phenotype: var(--white); --obtain: var(--seed-white); }
.hyacinth .RryyWw { --phenotype: var(--pink); --obtain: var(--island); }
.hyacinth .RRyyWw { --phenotype: var(--red); --obtain: var(--seed-red); }
.hyacinth .rrYYww { --phenotype: var(--yellow); --obtain: var(--seed-yellow); }
.hyacinth .RrYYww { --phenotype: var(--orange); --obtain: var(--island); }
.hyacinth .RRYYww { --phenotype: var(--purple); }
.hyacinth .rrYyww { --phenotype: var(--yellow); }
.hyacinth .RrYyww { --phenotype: var(--orange); }
.hyacinth .RRYyww { --phenotype: var(--blue); --obtain: var(--island); }
.hyacinth .rryyww { --phenotype: var(--white); }
.hyacinth .Rryyww { --phenotype: var(--red); }
.hyacinth .RRyyww { --phenotype: var(--red); }

.lily .rrYYWW { --phenotype: var(--white); }
.lily .RrYYWW { --phenotype: var(--yellow); }
.lily .RRYYWW { --phenotype: var(--white); }
.lily .rrYyWW { --phenotype: var(--white); }
.lily .RrYyWW { --phenotype: var(--yellow); }
.lily .RRYyWW { --phenotype: var(--pink); --obtain: var(--island); }
.lily .rryyWW { --phenotype: var(--white); --obtain: var(--seed-white); }
.lily .RryyWW { --phenotype: var(--white); }
.lily .RRyyWW { --phenotype: var(--pink); }
.lily .rrYYWw { --phenotype: var(--yellow); }
.lily .RrYYWw { --phenotype: var(--yellow); }
.lily .RRYYWw { --phenotype: var(--orange); --obtain: var(--island); }
.lily .rrYyWw { --phenotype: var(--white); }
.lily .RrYyWw { --phenotype: var(--yellow); }
.lily .RRYyWw { --phenotype: var(--red); }
.lily .rryyWw { --phenotype: var(--white); }
.lily .RryyWw { --phenotype: var(--pink); }
.lily .RRyyWw { --phenotype: var(--red); --obtain: var(--seed-red); }
.lily .rrYYww { --phenotype: var(--yellow); --obtain: var(--seed-yellow); }
.lily .RrYYww { --phenotype: var(--orange); }
.lily .RRYYww { --phenotype: var(--orange); }
.lily .rrYyww { --phenotype: var(--yellow); }
.lily .RrYyww { --phenotype: var(--orange); }
.lily .RRYyww { --phenotype: var(--black); --obtain: var(--island); }
.lily .rryyww { --phenotype: var(--white); }
.lily .Rryyww { --phenotype: var(--red); }
.lily .RRyyww { --phenotype: var(--black); }

.mum .rrYYWW { --phenotype: var(--yellow); }
.mum .RrYYWW { --phenotype: var(--purple); }
.mum .RRYYWW { --phenotype: var(--red); }
.mum .rrYyWW { --phenotype: var(--white); }
.mum .RrYyWW { --phenotype: var(--pink); --obtain: var(--island); }
.mum .RRYyWW { --phenotype: var(--red); }
.mum .rryyWW { --phenotype: var(--purple); }
.mum .RryyWW { --phenotype: var(--pink); }
.mum .RRyyWW { --phenotype: var(--red); }
.mum .rrYYWw { --phenotype: var(--yellow); }
.mum .RrYYWw { --phenotype: var(--purple); }
.mum .RRYYWw { --phenotype: var(--green); }
.mum .rrYyWw { --phenotype: var(--yellow); }
.mum .RrYyWw { --phenotype: var(--red); }
.mum .RRYyWw { --phenotype: var(--purple); --obtain: var(--island); }
.mum .rryyWw { --phenotype: var(--white); --obtain: var(--seed-white); }
.mum .RryyWw { --phenotype: var(--pink); }
.mum .RRyyWw { --phenotype: var(--red); }
.mum .rrYYww { --phenotype: var(--yellow); --obtain: var(--seed-yellow); }
.mum .RrYYww { --phenotype: var(--purple); }
.mum .RRYYww { --phenotype: var(--green); }
.mum .rrYyww { --phenotype: var(--yellow); }
.mum .RrYyww { --phenotype: var(--yellow); }
.mum .RRYyww { --phenotype: var(--purple); }
.mum .rryyww { --phenotype: var(--white); }
.mum .Rryyww { --phenotype: var(--pink); }
.mum .RRyyww { --phenotype: var(--red); --obtain: var(--seed-red); }

.pansy .rrYYWW { --phenotype: var(--yellow); }
.pansy .RrYYWW { --phenotype: var(--yellow); }
.pansy .RRYYWW { --phenotype: var(--purple); }
.pansy .rrYyWW { --phenotype: var(--blue); }
.pansy .RrYyWW { --phenotype: var(--orange); }
.pansy .RRYyWW { --phenotype: var(--purple); }
.pansy .rryyWW { --phenotype: var(--blue); }
.pansy .RryyWW { --phenotype: var(--blue); --obtain: var(--island); }
.pansy .RRyyWW { --phenotype: var(--purple); }
.pansy .rrYYWw { --phenotype: var(--yellow); }
.pansy .RrYYWw { --phenotype: var(--yellow); }
.pansy .RRYYWw { --phenotype: var(--orange); --obtain: var(--island); }
.pansy .rrYyWw { --phenotype: var(--yellow); }
.pansy .RrYyWw { --phenotype: var(--orange); }
.pansy .RRYyWw { --phenotype: var(--red); }
.pansy .rryyWw { --phenotype: var(--white); --obtain: var(--seed-white); }
.pansy .RryyWw { --phenotype: var(--red); }
.pansy .RRyyWw { --phenotype: var(--red); }
.pansy .rrYYww { --phenotype: var(--yellow); --obtain: var(--seed-yellow); }
.pansy .RrYYww { --phenotype: var(--yellow); }
.pansy .RRYYww { --phenotype: var(--orange); }
.pansy .rrYyww { --phenotype: var(--yellow); }
.pansy .RrYyww { --phenotype: var(--orange); }
.pansy .RRYyww { --phenotype: var(--red); }
.pansy .rryyww { --phenotype: var(--white); }
.pansy .Rryyww { --phenotype: var(--red); }
.pansy .RRyyww { --phenotype: var(--red); --obtain: var(--seed-red); }

.rose .ss .rrYYWWss { --phenotype: var(--white); }
.rose .ss .RrYYWWss { --phenotype: var(--red); }
.rose .ss .RRYYWWss { --phenotype: var(--blue); }
.rose .ss .rrYyWWss { --phenotype: var(--purple); }
.rose .ss .RrYyWWss { --phenotype: var(--red); }
.rose .ss .RRYyWWss { --phenotype: var(--black); }
.rose .ss .rryyWWss { --phenotype: var(--purple); }
.rose .ss .RryyWWss { --phenotype: var(--red); }
.rose .ss .RRyyWWss { --phenotype: var(--black); }
.rose .ss .rrYYWwss { --phenotype: var(--yellow); }
.rose .ss .RrYYWwss { --phenotype: var(--orange); }
.rose .ss .RRYYWwss { --phenotype: var(--orange); }
.rose .ss .rrYyWwss { --phenotype: var(--white); }
.rose .ss .RrYyWwss { --phenotype: var(--red); }
.rose .ss .RRYyWwss { --phenotype: var(--red); }
.rose .ss .rryyWwss { --phenotype: var(--white); --obtain: var(--seed-white); }
.rose .ss .RryyWwss { --phenotype: var(--red); }
.rose .ss .RRyyWwss { --phenotype: var(--black); }
.rose .ss .rrYYwwss { --phenotype: var(--yellow); --obtain: var(--seed-yellow); }
.rose .ss .RrYYwwss { --phenotype: var(--orange); }
.rose .ss .RRYYwwss { --phenotype: var(--orange); }
.rose .ss .rrYywwss { --phenotype: var(--yellow); }
.rose .ss .RrYywwss { --phenotype: var(--orange); }
.rose .ss .RRYywwss { --phenotype: var(--orange); }
.rose .ss .rryywwss { --phenotype: var(--white); }
.rose .ss .Rryywwss { --phenotype: var(--red); }
.rose .ss .RRyywwss { --phenotype: var(--black); }
.rose .Ss .rrYYWWSs { --phenotype: var(--white); }
.rose .Ss .RrYYWWSs { --phenotype: var(--pink); }
.rose .Ss .RRYYWWSs { --phenotype: var(--red); }
.rose .Ss .rrYyWWSs { --phenotype: var(--purple); }
.rose .Ss .RrYyWWSs { --phenotype: var(--pink); }
.rose .Ss .RRYyWWSs { --phenotype: var(--red); }
.rose .Ss .rryyWWSs { --phenotype: var(--purple); }
.rose .Ss .RryyWWSs { --phenotype: var(--pink); }
.rose .Ss .RRyyWWSs { --phenotype: var(--red); }
.rose .Ss .rrYYWwSs { --phenotype: var(--yellow); }
.rose .Ss .RrYYWwSs { --phenotype: var(--yellow); }
.rose .Ss .RRYYWwSs { --phenotype: var(--orange); --obtain: var(--island); }
.rose .Ss .rrYyWwSs { --phenotype: var(--white); }
.rose .Ss .RrYyWwSs { --phenotype: var(--pink); }
.rose .Ss .RRYyWwSs { --phenotype: var(--red); }
.rose .Ss .rryyWwSs { --phenotype: var(--white); }
.rose .Ss .RryyWwSs { --phenotype: var(--pink); }
.rose .Ss .RRyyWwSs { --phenotype: var(--red); }
.rose .Ss .rrYYwwSs { --phenotype: var(--yellow); }
.rose .Ss .RrYYwwSs { --phenotype: var(--yellow); }
.rose .Ss .RRYYwwSs { --phenotype: var(--orange); }
.rose .Ss .rrYywwSs { --phenotype: var(--yellow); }
.rose .Ss .RrYywwSs { --phenotype: var(--yellow); }
.rose .Ss .RRYywwSs { --phenotype: var(--orange); }
.rose .Ss .rryywwSs { --phenotype: var(--white); }
.rose .Ss .RryywwSs { --phenotype: var(--pink); }
.rose .Ss .RRyywwSs { --phenotype: var(--red); --obtain: var(--seed-red); }
.rose .SS .rrYYWWSS { --phenotype: var(--white); }
.rose .SS .RrYYWWSS { --phenotype: var(--white); }
.rose .SS .RRYYWWSS { --phenotype: var(--white); }
.rose .SS .rrYyWWSS { --phenotype: var(--purple); }
.rose .SS .RrYyWWSS { --phenotype: var(--purple); }
.rose .SS .RRYyWWSS { --phenotype: var(--purple); }
.rose .SS .rryyWWSS { --phenotype: var(--purple); }
.rose .SS .RryyWWSS { --phenotype: var(--purple); }
.rose .SS .RRyyWWSS { --phenotype: var(--pink); --obtain: var(--island); }
.rose .SS .rrYYWwSS { --phenotype: var(--yellow); }
.rose .SS .RrYYWwSS { --phenotype: var(--yellow); }
.rose .SS .RRYYWwSS { --phenotype: var(--yellow); }
.rose .SS .rrYyWwSS { --phenotype: var(--white); }
.rose .SS .RrYyWwSS { --phenotype: var(--white); }
.rose .SS .RRYyWwSS { --phenotype: var(--white); }
.rose .SS .rryyWwSS { --phenotype: var(--white); }
.rose .SS .RryyWwSS { --phenotype: var(--white); }
.rose .SS .RRyyWwSS { --phenotype: var(--pink); }
.rose .SS .rrYYwwSS { --phenotype: var(--yellow); }
.rose .SS .RrYYwwSS { --phenotype: var(--yellow); }
.rose .SS .RRYYwwSS { --phenotype: var(--yellow); }
.rose .SS .rrYywwSS { --phenotype: var(--yellow); }
.rose .SS .RrYywwSS { --phenotype: var(--yellow); }
.rose .SS .RRYywwSS { --phenotype: var(--yellow); }
.rose .SS .rryywwSS { --phenotype: var(--white); }
.rose .SS .RryywwSS { --phenotype: var(--white); }
.rose .SS .RRyywwSS { --phenotype: var(--pink); }

.tulip .rrYYWW { --phenotype: var(--yellow); }
.tulip .RrYYWW { --phenotype: var(--yellow); }
.tulip .RRYYWW { --phenotype: var(--purple); }
.tulip .rrYyWW { --phenotype: var(--white); }
.tulip .RrYyWW { --phenotype: var(--yellow); }
.tulip .RRYyWW { --phenotype: var(--red); }
.tulip .rryyWW { --phenotype: var(--white); }
.tulip .RryyWW { --phenotype: var(--white); }
.tulip .RRyyWW { --phenotype: var(--red); }
.tulip .rrYYWw { --phenotype: var(--yellow); }
.tulip .RrYYWw { --phenotype: var(--yellow); }
.tulip .RRYYWw { --phenotype: var(--purple); }
.tulip .rrYyWw { --phenotype: var(--yellow); }
.tulip .RrYyWw { --phenotype: var(--yellow); }
.tulip .RRYyWw { --phenotype: var(--red); }
.tulip .rryyWw { --phenotype: var(--white); --obtain: var(--seed-white); }
.tulip .RryyWw { --phenotype: var(--pink); --obtain: var(--island); }
.tulip .RRyyWw { --phenotype: var(--red); --obtain: var(--seed-red); }
.tulip .rrYYww { --phenotype: var(--yellow); --obtain: var(--seed-yellow); }
.tulip .RrYYww { --phenotype: var(--orange); --obtain: var(--island); }
.tulip .RRYYww { --phenotype: var(--purple); }
.tulip .rrYyww { --phenotype: var(--yellow); }
.tulip .RrYyww { --phenotype: var(--orange); }
.tulip .RRYyww { --phenotype: var(--black); --obtain: var(--island); }
.tulip .rryyww { --phenotype: var(--white); }
.tulip .Rryyww { --phenotype: var(--red); }
.tulip .RRyyww { --phenotype: var(--black); }

.windflower .rrYYWW { --phenotype: var(--orange); }
.windflower .RrYYWW { --phenotype: var(--orange); }
.windflower .RRYYWW { --phenotype: var(--purple); }
.windflower .rrYyWW { --phenotype: var(--blue); }
.windflower .RrYyWW { --phenotype: var(--pink); }
.windflower .RRYyWW { --phenotype: var(--purple); }
.windflower .rryyWW { --phenotype: var(--blue); }
.windflower .RryyWW { --phenotype: var(--blue); --obtain: var(--island); }
.windflower .RRyyWW { --phenotype: var(--purple); }
.windflower .rrYYWw { --phenotype: var(--orange); }
.windflower .RrYYWw { --phenotype: var(--orange); }
.windflower .RRYYWw { --phenotype: var(--pink); --obtain: var(--island); }
.windflower .rrYyWw { --phenotype: var(--orange); }
.windflower .RrYyWw { --phenotype: var(--pink); }
.windflower .RRYyWw { --phenotype: var(--red); }
.windflower .rryyWw { --phenotype: var(--white); --obtain: var(--seed-white); }
.windflower .RryyWw { --phenotype: var(--red); }
.windflower .RRyyWw { --phenotype: var(--red); }
.windflower .rrYYww { --phenotype: var(--orange); --obtain: var(--seed-orange); }
.windflower .RrYYww { --phenotype: var(--orange); }
.windflower .RRYYww { --phenotype: var(--pink); }
.windflower .rrYyww { --phenotype: var(--orange); }
.windflower .RrYyww { --phenotype: var(--pink); }
.windflower .RRYyww { --phenotype: var(--red); }
.windflower .rryyww { --phenotype: var(--white); }
.windflower .Rryyww { --phenotype: var(--red); }
.windflower .RRyyww { --phenotype: var(--red); --obtain: var(--seed-red); }

@media only screen and (max-width: 1200px) {

    section.rose:not(.condensed) {
        flex-direction: column;
        align-items: center;
    }

    section.rose:not(.condensed) div.varieties:nth-child(3n+3),
    section.rose:not(.condensed) div.varieties:nth-child(3n+4) {
        padding-bottom: 36px;
        border-bottom: 10px solid rgba(0, 0, 0, 0.5);
    }

}

@media only screen and (max-width: 720px) {

    div.species_menu {
        margin-left: 0;
        margin-right: 0;
        border-left: 0;
        border-right: 0;
        border-radius: 0;
    }

    div.species_menu ul {
        grid-template-columns: repeat(4, 1fr);
    }

    section {
        margin-left: 0;
        margin-right: 0;
        border-left: 0;
        border-right: 0;
        border-radius: 0;
    }

    div.notes {
        padding-left: 16px;
        padding-right: 16px;
    }

    section.rose.condensed {
        --tile-width: 48px;
    }

    section.rose.condensed .parentA > div,
    section.rose.condensed .parentB > div {
        padding-left: 5px;
        padding-right: 5px;
        font-size: 16px;
    }

    section.rose.condensed .result {
        font-size: 12px;
    }
}
